version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # external access (Spring Boot / local host)
      - "29092:29092" # internal access (from other containers in same network)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  postgres_order:
    image: 'postgres:13'
    container_name: postgres-order
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=orderservice
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=orderservice
    volumes:
      - postgres-order-data:/var/lib/postgresql/data

  postgres_inventory:
    image: 'postgres:13'
    container_name: postgres-inventory
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=inventoryservice
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=inventoryservice
    volumes:
      - postgres-inventory-data:/var/lib/postgresql/data

volumes:
  postgres-order-data:
  postgres-inventory-data:
